{"ast":null,"code":"import _regeneratorRuntime from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nexport function loginUser(credentials, history) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.post('http://89.163.221.56:8881/api/company/login', credentials);\n\n              case 3:\n                res = _context.sent;\n                dispatch({\n                  type: 'USER_LOGIN'\n                });\n                localStorage.setItem('accesstoken', res.data.accessToken);\n                localStorage.setItem('c_Id', res.data.companyId);\n                history.push('/DashBoard');\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch({\n                  type: 'USER_LOGIN_FAIL',\n                  payload: 'Invalid email or password'\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}","map":{"version":3,"sources":["/home/tigani/Documents/adminSurvey/SurveyAdmin/src/actions/index.js"],"names":["axios","loginUser","credentials","history","dispatch","post","res","type","localStorage","setItem","data","accessToken","companyId","push","payload"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,SAASC,SAAT,CAAmBC,WAAnB,EAAgCC,OAAhC,EAAyC;AAC9C;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEeJ,KAAK,CAACK,IAAN,CAAW,6CAAX,EAAyDH,WAAzD,CAFf;;AAAA;AAEGI,gBAAAA,GAFH;AAGHF,gBAAAA,QAAQ,CAAC;AAAEG,kBAAAA,IAAI,EAAE;AAAR,iBAAD,CAAR;AACAC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAmCH,GAAG,CAACI,IAAJ,CAASC,WAA5C;AACAH,gBAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BH,GAAG,CAACI,IAAJ,CAASE,SAArC;AACAT,gBAAAA,OAAO,CAACU,IAAR,CAAa,YAAb;AANG;AAAA;;AAAA;AAAA;AAAA;AAQHT,gBAAAA,QAAQ,CAAC;AACPG,kBAAAA,IAAI,EAAE,iBADC;AAEPO,kBAAAA,OAAO,EAAE;AAFF,iBAAD,CAAR;;AARG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAcD","sourcesContent":["import axios from 'axios'\n\n\nexport function loginUser(credentials, history) {\n  return async (dispatch) => {\n    try {\n      const res = await axios.post('http://89.163.221.56:8881/api/company/login',credentials);\n      dispatch({ type: 'USER_LOGIN'});\n      localStorage.setItem('accesstoken',res.data.accessToken);\n      localStorage.setItem('c_Id',res.data.companyId);\n      history.push('/DashBoard');\n    } catch(error) {\n      dispatch({\n        type: 'USER_LOGIN_FAIL',\n        payload: 'Invalid email or password'\n      });   \n    }   \n  };\n}"]},"metadata":{},"sourceType":"module"}