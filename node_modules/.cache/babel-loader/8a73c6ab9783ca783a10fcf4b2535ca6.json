{"ast":null,"code":"import _defineProperty from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/tigani/Documents/adminSurvey/SurveyAdmin/src/components/AddQuestion/AddQuestion.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, Checkbox, Header } from 'semantic-ui-react';\nimport axios from 'axios';\n\nvar AddQuestion =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddQuestion, _Component);\n\n  function AddQuestion(props) {\n    var _this;\n\n    _classCallCheck(this, AddQuestion);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddQuestion).call(this, props));\n\n    _this.handleChange = function (e, _ref) {\n      var value = _ref.value;\n      return _this.setState({\n        value: value\n      });\n    };\n\n    _this.state = {\n      Answers: [{\n        answer: \"\"\n      }]\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddQuestion, [{\n    key: \"showUi\",\n    value: function showUi() {\n      var _this2 = this;\n\n      return this.state.Answers.map(function (el, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          placeholder: \"answer\",\n          name: \"answer\",\n          value: el.answer || '',\n          onChange: _this2.handleChange.bind(_this2, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"button\",\n          value: \"remove\",\n          onClick: _this2.removeClick.bind(_this2, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"removeClick\",\n    value: function removeClick(i) {\n      var Answers = _toConsumableArray(this.state.Answers);\n\n      Answers.splice(i, 1);\n      this.setState({\n        Answers: Answers\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(i, e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      var Answers = _toConsumableArray(this.state.Answers);\n\n      Answers[i] = _objectSpread({}, Answers[i], _defineProperty({}, name, value));\n      this.setState({\n        Answers: Answers\n      });\n    }\n  }, {\n    key: \"addClick\",\n    value: function addClick() {\n      this.setState(function (prevState) {\n        return {\n          Answers: [].concat(_toConsumableArray(prevState.Answers), [{\n            answer: \"\"\n          }])\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"New Question\"), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Question\"), React.createElement(\"input\", {\n        placeholder: \"new question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Question Type\"), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        radio: true,\n        label: \"Yes/No\",\n        name: \"checkboxRadioGroup\",\n        value: \"Yes/No\",\n        checked: this.state.value === 'Yes/No',\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        radio: true,\n        label: \"True/False\",\n        name: \"checkboxRadioGroup\",\n        value: \"True/False\",\n        checked: this.state.value === 'True/False',\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        radio: true,\n        label: \"Excellent/V.good/good/Bad options\",\n        name: \"checkboxRadioGroup\",\n        value: \"Excellent/V.good/good/Bad options\",\n        checked: this.state.value === 'Excellent/V.good/good/Bad options',\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        radio: true,\n        label: \"Create Answers\",\n        name: \"checkboxRadioGroup\",\n        value: \"Create Answers\",\n        checked: this.state.value === 'Create Answers',\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), this.state.value && this.state.value === \"Create Answers\" ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.showUi(), React.createElement(\"input\", {\n        type: \"button\",\n        value: \"add more\",\n        onClick: this.addClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })) : null, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(Button, {\n        fluid: true,\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Create New Question\")));\n    }\n  }]);\n\n  return AddQuestion;\n}(Component);\n\nexport default AddQuestion;","map":{"version":3,"sources":["/home/tigani/Documents/adminSurvey/SurveyAdmin/src/components/AddQuestion/AddQuestion.js"],"names":["React","Component","Form","Button","Checkbox","Header","axios","AddQuestion","props","handleChange","e","value","setState","state","Answers","answer","handleSubmit","bind","map","el","i","removeClick","splice","target","name","prevState","showUi","addClick"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Form,Button,Checkbox,Header} from 'semantic-ui-react'\nimport axios from 'axios';\n\n\nclass AddQuestion extends Component {\n   \n  constructor(props) {\n    super(props);\n    this.state = {\n    \tAnswers: [{answer:\"\"}]\n    };\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  \n  handleChange = (e, { value }) => this.setState({ value })\n\n  showUi(){\n    return this.state.Answers.map((el,i) => (\n      <div key={i}>\n       <input \n       placeholder=\"answer\" \n       name=\"answer\" \n       value={el.answer ||''}\n       onChange={this.handleChange.bind(this, i)} \n       />\n\n       <input \n       type='button' \n       value='remove' \n       onClick={this.removeClick.bind(this, i)}\n       />\n\n      </div>          \n    ))\n }\n\n removeClick(i){\n  let Answers = [...this.state.Answers];\n  Answers.splice(i, 1);\n  this.setState({ Answers });\n}\n\n handleChange(i, e) {\n  const { name, value } = e.target;\n  let Answers = [...this.state.Answers];\n  Answers[i] = {...Answers[i], [name]: value};\n  this.setState({ Answers });\n}\n\naddClick(){\n  this.setState(prevState => ({ \n    Answers: [...prevState.Answers, { answer: \"\"}]\n  }))\n}\n\n render(){  \n  return(  \n       <div>   \n      <Header as='h2' textAlign='center'>\n      New Question\n    </Header> \n\n\n    <Form  onSubmit={this.handleSubmit}>\n    <Form.Field>\n      <label>Question</label>\n      <input placeholder='new question'/>\n    </Form.Field>   \n\n\n    <label>Question Type</label>\n    <Form.Field>\n        </Form.Field>\n        <Form.Field>\n          <Checkbox\n            radio\n            label='Yes/No'\n            name='checkboxRadioGroup'\n            value='Yes/No'\n            checked={this.state.value === 'Yes/No'}\n            onChange={this.handleChange}\n          />\n        </Form.Field>\n\n        <Form.Field>\n          <Checkbox\n            radio\n            label='True/False'\n            name='checkboxRadioGroup'\n            value='True/False'\n            checked={this.state.value === 'True/False'}\n            onChange={this.handleChange}\n          />\n        </Form.Field>\n\n        <Form.Field>\n          <Checkbox\n            radio\n            label='Excellent/V.good/good/Bad options'\n            name='checkboxRadioGroup'\n            value='Excellent/V.good/good/Bad options'\n            checked={this.state.value === 'Excellent/V.good/good/Bad options'}\n            onChange={this.handleChange}\n          />\n        </Form.Field>\n\n\n        <Form.Field>\n          <Checkbox\n            radio\n            label='Create Answers'\n            name='checkboxRadioGroup'\n            value='Create Answers'\n            checked={this.state.value === 'Create Answers'}\n            onChange={this.handleChange}\n          />\n        </Form.Field>\n          {this.state.value && this.state.value === \"Create Answers\"?\n          <div>\n          {this.showUi()}        \n          <input type='button' value='add more' onClick={this.addClick.bind(this)}/>\n          <input type=\"submit\" value=\"Submit\" />\n          </div> \n          :null  \n          }\n          <br/>   \n          <br/>\n\n\n    <Button fluid color='red'>Create New Question</Button>\n\n  </Form>\n            </div>\n          );\n          \n      }\n\n\n}\n\n\n\nexport default AddQuestion"]},"metadata":{},"sourceType":"module"}