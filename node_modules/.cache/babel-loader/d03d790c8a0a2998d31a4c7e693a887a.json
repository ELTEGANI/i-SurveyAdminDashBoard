{"ast":null,"code":"import _objectSpread from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/tigani/Documents/adminSurvey/SurveyAdmin/src/components/AddQuestion/AddQuestion.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, Checkbox, Header, Input } from 'semantic-ui-react';\nimport axios from 'axios';\n\nvar AddQuestion =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddQuestion, _Component);\n\n  function AddQuestion(props) {\n    var _this;\n\n    _classCallCheck(this, AddQuestion);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddQuestion).call(this, props));\n\n    _this.handleChange = function (e, _ref) {\n      var value = _ref.value;\n      return _this.setState({\n        value: value,\n        questiontype: value\n      });\n    };\n\n    _this.questionhandleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.state = {\n      question: \"\",\n      questiontype: \"\",\n      Answers: [{\n        answer: \"\"\n      }],\n      Surveyid: \"2c022520-7f9a-11e9-9974-b543e76e34c1\"\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddQuestion, [{\n    key: \"showUi\",\n    value: function showUi() {\n      var _this2 = this;\n\n      return this.state.Answers.map(function (el, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"\".concat(i + 1, \"-Answer\")), React.createElement(Input, {\n          placeholder: \"answer\",\n          name: \"answer\",\n          value: el.answer || '',\n          onChange: _this2.createHandleChange.bind(_this2, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"button\",\n          value: \"Remove Answer\",\n          onClick: _this2.removeClick.bind(_this2, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"removeClick\",\n    value: function removeClick(i) {\n      var Answers = _toConsumableArray(this.state.Answers);\n\n      Answers.splice(i, 1);\n      this.setState({\n        Answers: Answers\n      });\n    }\n  }, {\n    key: \"createHandleChange\",\n    value: function createHandleChange(i, e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      var Answers = _toConsumableArray(this.state.Answers);\n\n      Answers[i] = _objectSpread({}, Answers[i], _defineProperty({}, name, value));\n      this.setState({\n        Answers: Answers\n      });\n    }\n  }, {\n    key: \"addClick\",\n    value: function addClick() {\n      this.setState(function (prevState) {\n        return {\n          Answers: [].concat(_toConsumableArray(prevState.Answers), [{\n            answer: \"\"\n          }])\n        };\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _ref3;\n\n      console.log(JSON.stringify(this.state));\n      event.preventDefault();\n\n      if (this.state.questiontype === \"AddedAnswers\") {\n        var axiosConfig = {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZG1pbklkIjoiZmM1NzNiZDAtN2Y5OS0xMWU5LTk5NzQtYjU0M2U3NmUzNGMxIiwiaWF0IjoxNTU4OTQwMjU0LCJleHAiOjE1NTkwMjY2NTR9.82VHzN6ND2ZMN4mYdTHuHB6nSbD-Sy2MpkugKUqBvEk'\n          }\n        };\n        axios.post('http://localhost:8080/Admin/createquestion', JSON.stringify(this.state), axiosConfig).then(function (response) {\n          console.log(response);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        switch (this.state.questiontype) {\n          case \"Yes/No\":\n            this.setState(function (state) {\n              var Answers = state.Answers.map(function (item) {\n                return item.answer = 'Yes';\n              }, item.answer = 'No');\n              return {\n                Answers: Answers\n              };\n            });\n            alert(JSON.stringify(this.state));\n            break;\n\n          case \"True/False\":\n            this.setState({\n              Answers: [_defineProperty({\n                answer: \"True\"\n              }, \"answer\", \"False\")]\n            });\n            alert(JSON.stringify(this.state));\n            break;\n\n          case \"Excellent/V.good/good/Bad options\":\n            this.setState({\n              Answers: [(_ref3 = {\n                answer: \"Excellent\"\n              }, _defineProperty(_ref3, \"answer\", \"V.good\"), _defineProperty(_ref3, \"answer\", \"good\"), _defineProperty(_ref3, \"answer\", \"Bad\"), _ref3)]\n            });\n            alert(JSON.stringify(this.state));\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"New Question\"), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Question\"), React.createElement(\"input\", {\n        placeholder: \"new question\",\n        name: \"question\",\n        defaultValue: this.state.question,\n        onChange: this.questionhandleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Question Type\"), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        radio: true,\n        label: \"Yes/No\",\n        name: \"checkboxRadioGroup\",\n        value: \"Yes/No\",\n        checked: this.state.value === 'Yes/No',\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        radio: true,\n        label: \"True/False\",\n        name: \"checkboxRadioGroup\",\n        value: \"True/False\",\n        checked: this.state.value === 'True/False',\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        radio: true,\n        label: \"Excellent/V.good/good/Bad options\",\n        name: \"checkboxRadioGroup\",\n        value: \"Excellent/V.good/good/Bad options\",\n        checked: this.state.value === 'Excellent/V.good/good/Bad options',\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        radio: true,\n        label: \"Add Answers\",\n        name: \"checkboxRadioGroup\",\n        value: \"AddedAnswers\",\n        checked: this.state.value === 'AddedAnswers',\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), this.state.questiontype && this.state.questiontype === 'AddedAnswers' ? React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, this.showUi(), React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Add Answer\",\n        onClick: this.addClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }))) : null, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(Button, {\n        fluid: true,\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Create New Question\")));\n    }\n  }]);\n\n  return AddQuestion;\n}(Component);\n\nexport default AddQuestion;","map":{"version":3,"sources":["/home/tigani/Documents/adminSurvey/SurveyAdmin/src/components/AddQuestion/AddQuestion.js"],"names":["React","Component","Form","Button","Checkbox","Header","Input","axios","AddQuestion","props","handleChange","e","value","setState","questiontype","questionhandleChange","target","name","state","question","Answers","answer","Surveyid","handleSubmit","bind","map","el","i","createHandleChange","removeClick","splice","prevState","event","console","log","JSON","stringify","preventDefault","axiosConfig","headers","post","then","response","catch","error","item","alert","showUi","addClick"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Form,Button,Checkbox,Header, Input} from 'semantic-ui-react'\nimport axios from 'axios';\n\n\nclass AddQuestion extends Component {\n   \n  constructor(props) {\n    super(props);\n    this.state = {\n      question:\"\",\n      questiontype:\"\",\n      Answers: [{answer:\"\"}],\n      Surveyid:\"2c022520-7f9a-11e9-9974-b543e76e34c1\"\n    };\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n   \n  \n  handleChange = (e, { value }) => this.setState({ value,questiontype:value })\n\n  showUi(){\n    return this.state.Answers.map((el,i) => (\n      <div key={i}>\n      <label>{`${i + 1}-Answer`}</label>  \n       <Input \n       placeholder=\"answer\" \n       name=\"answer\" \n       value={el.answer ||''}\n       onChange={this.createHandleChange.bind(this, i)} \n       />\n\n       <input \n       type='button' \n       value='Remove Answer' \n       onClick={this.removeClick.bind(this, i)}\n       />\n\n      </div>          \n    ))\n }\n\n removeClick(i){\n  let Answers = [...this.state.Answers];\n  Answers.splice(i, 1);\n  this.setState({ Answers });\n}\n\nquestionhandleChange = (e) => {\n  this.setState({\n    [e.target.name]:e.target.value\n  })\n} \n\ncreateHandleChange(i, e) {\n  const { name, value } = e.target;\n  let Answers = [...this.state.Answers];\n  Answers[i] = {...Answers[i], [name]: value};\n  this.setState({ Answers });\n}\n\naddClick(){\n  this.setState(prevState => ({ \n    Answers: [...prevState.Answers, { answer: \"\"}]\n  }))\n}\n\nhandleSubmit(event) {\n  console.log(JSON.stringify(this.state));\n  event.preventDefault();\n  if(this.state.questiontype === \"AddedAnswers\"){\n        let axiosConfig = {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZG1pbklkIjoiZmM1NzNiZDAtN2Y5OS0xMWU5LTk5NzQtYjU0M2U3NmUzNGMxIiwiaWF0IjoxNTU4OTQwMjU0LCJleHAiOjE1NTkwMjY2NTR9.82VHzN6ND2ZMN4mYdTHuHB6nSbD-Sy2MpkugKUqBvEk' \n    }\n  };\n  axios.post('http://localhost:8080/Admin/createquestion',JSON.stringify(this.state),axiosConfig)\n.then(response=>{\n    console.log(response)\n}).catch(error=>{\n    console.log(error)  \n}) \n  }else{\n       switch(this.state.questiontype){\n            case \"Yes/No\":\n            this.setState(state => {\n              const Answers = state.Answers.map(item => item.answer='Yes',item.answer='No');\n              return {\n                Answers,\n              };\n            });\n              alert(JSON.stringify(this.state))\n            break;\n \n            case \"True/False\":\n              this.setState({Answers:[{answer:\"True\",answer:\"False\"}]})\n              alert(JSON.stringify(this.state))\n            break;  \n\n            case \"Excellent/V.good/good/Bad options\":\n              this.setState({Answers:[{answer:\"Excellent\",answer:\"V.good\",\n              answer:\"good\",answer:\"Bad\"}]})\n              alert(JSON.stringify(this.state))\n            break;\n       }\n  }\n \n}\n\n render(){  \n  return(  \n       <div>   \n      <Header as='h2' textAlign='center'>\n      New Question\n    </Header> \n\n\n    <Form onSubmit={this.handleSubmit}>\n    <Form.Field>\n      <label>Question</label>\n      <input \n      placeholder='new question'\n        name='question'\n        defaultValue={this.state.question}\n       onChange={this.questionhandleChange}\n      />\n    </Form.Field>   \n\n\n    <label>Question Type</label>\n    <Form.Field>\n        </Form.Field>\n        <Form.Field>\n          <Checkbox\n            radio\n            label='Yes/No'\n            name='checkboxRadioGroup'\n            value='Yes/No'\n            checked={this.state.value === 'Yes/No'}\n            onChange={this.handleChange}\n          />\n        </Form.Field>\n\n        <Form.Field>\n          <Checkbox\n            radio\n            label='True/False'\n            name='checkboxRadioGroup'\n            value='True/False'\n            checked={this.state.value === 'True/False'}\n            onChange={this.handleChange}\n          />\n        </Form.Field>\n\n        <Form.Field>\n          <Checkbox\n            radio\n            label='Excellent/V.good/good/Bad options'\n            name='checkboxRadioGroup'\n            value='Excellent/V.good/good/Bad options'\n            checked={this.state.value === 'Excellent/V.good/good/Bad options'}\n            onChange={this.handleChange}\n          />\n        </Form.Field>\n\n\n\n        <Form.Field>\n          <Checkbox\n            radio\n            label='Add Answers'\n            name='checkboxRadioGroup'\n            value='AddedAnswers'\n            checked={this.state.value === 'AddedAnswers'}\n            onChange={this.handleChange}\n          />\n        </Form.Field>\n\n\n        { \n          this.state.questiontype && this.state.questiontype === 'AddedAnswers'?\n        <Form.Field>\n         <div>\n        {this.showUi()}        \n       <input type='button' value='Add Answer' onClick={this.addClick.bind(this)}/>\n        </div> \n        </Form.Field>  \n        :null\n        }\n        <br/>\n    <Button fluid color='red'>Create New Question</Button>\n\n  </Form>\n            </div>\n          );\n          \n      }\n\n\n}\n\n\n\nexport default AddQuestion"]},"metadata":{},"sourceType":"module"}