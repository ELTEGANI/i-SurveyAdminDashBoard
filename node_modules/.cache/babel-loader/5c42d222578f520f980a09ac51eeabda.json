{"ast":null,"code":"import _defineProperty from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tigani/Documents/adminSurvey/SurveyAdmin/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tigani/Documents/adminSurvey/SurveyAdmin/src/components/AddSurvey/AddSurvey.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, TextArea, Header, Checkbox, Message } from 'semantic-ui-react';\nimport axios from 'axios';\n\nvar AddSurvey =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddSurvey, _Component);\n\n  function AddSurvey() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddSurvey);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddSurvey)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: '',\n      description: '',\n      surveyType: '',\n      errors: {},\n      msgerror: ''\n    };\n\n    _this.checkboxhandleChange = function (e, _ref) {\n      var value = _ref.value;\n      return _this.setState({\n        value: value,\n        surveyType: value\n      });\n    };\n\n    _this.handleChange = function (e) {\n      if (!!_this.state.errors[e.target.name]) {\n        var _this$setState;\n\n        var errors = Object.assign({}, _this.state.errors);\n        delete errors[e.target.name];\n\n        _this.setState((_this$setState = {}, _defineProperty(_this$setState, e.target.name, e.target.value), _defineProperty(_this$setState, \"errors\", errors), _this$setState));\n      } else {\n        _this.setState(_defineProperty({}, e.target.name, e.target.value));\n      }\n    };\n\n    _this.validate = function () {\n      var errors = {};\n      if (_this.state.title === '') errors.title = \"Title Can't Be Empty\";\n      if (_this.state.description === '') errors.description = \"Description Can't Be Empty\";\n      return errors;\n    };\n\n    _this.createSurveyHandler = function (e) {\n      e.preventDefault();\n\n      var errors = _this.validate();\n\n      _this.setState({\n        errors: errors\n      });\n\n      var isValid = Object.keys(errors).length === 0;\n\n      if (isValid) {\n        var isonline = navigator.onLine;\n\n        if (isonline) {\n          var axiosConfig = {\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': 'Bearer ' + localStorage.getItem('accesstoken')\n            }\n          };\n          axios.post('http://localhost:8080/Admin/createsurvey', _this.state, axiosConfig).then(function (response) {\n            _this.setState({\n              msgerror: response.data.message\n            });\n          }).catch(function (error) {\n            console.log(error);\n          });\n        } else {\n          alert('Dear User No Internet Connection Available');\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddSurvey, [{\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"New Survey\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.msgerror ? React.createElement(Message, {\n        positive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Message.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.msgerror)) : null), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Survey Title\"), React.createElement(\"input\", {\n        placeholder: \"survey title\",\n        name: \"title\",\n        defaultValue: this.state.title,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        style: {\n          color: \"#ae5856\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, errors.title && errors.title), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Survey Description\"), React.createElement(TextArea, {\n        placeholder: \"survey description\",\n        name: \"description\",\n        defaultValue: this.state.description,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        style: {\n          color: \"#ae5856\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, errors.description && errors.description), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        radio: true,\n        label: \"People\",\n        name: \"checkboxRadioGroup\",\n        value: \"People\",\n        checked: this.state.value === 'People',\n        onChange: this.checkboxhandleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        style: {\n          color: \"#ae5856\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, errors.checkboxRadioGroup && errors.checkboxRadioGroup), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        radio: true,\n        label: \"Companies\",\n        name: \"checkboxRadioGroup\",\n        value: \"Companies\",\n        checked: this.state.value === 'Companies',\n        onChange: this.checkboxhandleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(Button, {\n        fluid: true,\n        color: \"pink\",\n        onClick: this.createSurveyHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Create New Survey\")));\n    }\n  }]);\n\n  return AddSurvey;\n}(Component);\n\nexport default AddSurvey;","map":{"version":3,"sources":["/home/tigani/Documents/adminSurvey/SurveyAdmin/src/components/AddSurvey/AddSurvey.js"],"names":["React","Component","Form","Button","TextArea","Header","Checkbox","Message","axios","AddSurvey","state","title","description","surveyType","errors","msgerror","checkboxhandleChange","e","value","setState","handleChange","target","name","Object","assign","validate","createSurveyHandler","preventDefault","isValid","keys","length","isonline","navigator","onLine","axiosConfig","headers","localStorage","getItem","post","then","response","data","message","catch","error","console","log","alert","color","checkboxRadioGroup"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Form,Button,TextArea,Header,Checkbox,Message} from 'semantic-ui-react'\nimport axios from 'axios';\n\n\nclass AddSurvey extends Component {\n     \n     state ={\n        title:'',\n        description:'',\n        surveyType:'',\n        errors:{},\n        msgerror:''\n           }\n\n     checkboxhandleChange = (e, { value }) => this.setState({ value ,surveyType:value})\n\n     handleChange = (e) => {\n       if(!!this.state.errors[e.target.name]){\n        let errors = Object.assign({},this.state.errors);\n        delete errors[e.target.name]\n        this.setState({\n          [e.target.name]:e.target.value,errors\n        })\n       }else{\n        this.setState({\n          [e.target.name]:e.target.value\n        })  \n       }\n      }   \n\n\n      validate = () =>{\n        const errors = {};\n        if(this.state.title === '') errors.title = \"Title Can't Be Empty\";\n        if(this.state.description === '') errors.description = \"Description Can't Be Empty\";\n        return errors; \n      }  \n\n\n    createSurveyHandler = (e) =>{\n      e.preventDefault();\n      const errors = this.validate();\n      this.setState({errors});\n      const isValid = Object.keys(errors).length === 0;\n      if(isValid){\n        const isonline = navigator.onLine;\n        if(isonline){\n          let axiosConfig = {\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': 'Bearer ' + localStorage.getItem('accesstoken')\n            }\n          };\n\n        axios.post('http://localhost:8080/Admin/createsurvey',this.state,axiosConfig)\n        .then(response=>{\n             this.setState({msgerror:response.data.message})\n        }).catch(error=>{\n            console.log(error)  \n        })  \n        }else{\n          alert('Dear User No Internet Connection Available');\n        }\n        \n      }\n        \n    }  \n     \n      render(){\n        const {errors} = this.state;  \n          return(\n            <div>   \n      <Header as='h2' textAlign='center'>\n      New Survey\n    </Header>\n    <br/>\n       <br/>\n       <div>\n         {this.state.msgerror?\n         <Message positive>\n         <Message.Header>\n          {this.state.msgerror}\n         </Message.Header>\n         </Message>\n         :null\n         }\n       </div>\n       <br/>\n       <br/>\n         <Form>\n    <Form.Field>\n      <label>Survey Title</label>\n      <input placeholder='survey title' \n         name='title'\n         defaultValue={this.state.title}\n        onChange={this.handleChange}\n      />\n    </Form.Field>\n    <span style={{color:\"#ae5856\"}}>\n     {errors.title && errors.title}\n    </span> \n\n\n\n    <Form.Field>\n      <label>Survey Description</label>\n      <TextArea placeholder='survey description'\n        name='description' \n        defaultValue={this.state.description}\n       onChange={this.handleChange}\n      />\n    </Form.Field>\n    <span style={{color:\"#ae5856\"}}>\n     {errors.description && errors.description}\n    </span> \n\n\n    <Form.Field>\n          <Checkbox\n            radio\n            label='People'\n            name='checkboxRadioGroup'\n            value='People'\n            checked={this.state.value === 'People'}\n            onChange={this.checkboxhandleChange}\n          />\n        </Form.Field>\n        <span style={{color:\"#ae5856\"}}>\n         {errors.checkboxRadioGroup && errors.checkboxRadioGroup}\n        </span> \n\n    \n        <Form.Field>\n          <Checkbox\n            radio\n            label='Companies'  \n            name='checkboxRadioGroup'\n            value='Companies'\n            checked={this.state.value === 'Companies'}\n            onChange={this.checkboxhandleChange}\n          />\n        </Form.Field>\n\n  \n     \n    <Button fluid color='pink' onClick={this.createSurveyHandler}>Create New Survey</Button>\n\n  </Form>\n            </div>\n          );\n          \n      }\n\n\n}\n\n\n\nexport default AddSurvey"]},"metadata":{},"sourceType":"module"}